✅ 4. GitHub Pages-Specific Optimizations
Ensure all links are relative to the repo root, e.g., ./images/…

Create 404.html to catch broken routes.

Verify all assets are reachable via static paths.

No dynamic server-side content—everything must be static and client-side.



Atharva Gupta is an artist and researcher working at the intersections of sound, movement, technology, and critical media practice. Currently based in Groningen, Netherlands, they are pursuing a Master’s in Media, Art, Design, and Technology (MADtech) at the Frank Mohr Institute, Minerva Art Academy. Their work spans sound installations, kinetic sculptures, generative systems, performance, and experimental interfaces, often engaging with themes of surveillance, systems aesthetics, noise, and the politics of attention.

Their educational background bridges disciplines: an MA in Arts, Cognition, and Criticism from the University of Groningen, and a BA in Psychology, Sociology, and Literature from Christ University, Bangalore. This transdisciplinary foundation informs a practice deeply rooted in both conceptual inquiry and material experimentation. Atharva’s work leverages tools like TouchDesigner, Ableton Live, Arduino, and sensor technologies to create interactive and time-based systems that foreground process, decay, repetition, and failure as aesthetic strategies.

Projects include ‘Rain Reminders’, an ongoing kinetic sound sculpture exploring tinnitus, attention, and meditative distraction through rotating acoustic mechanisms; ‘Symmetrical Fictions’, an audiovisual system using gameplay data and urban simulations to generate speculative sound environments; and various smaller works exploring modular multiplication, visual music, and human-machine feedback loops. Their performances and installations often blend live data, algorithmic processes, and mechanical objects, situating their practice between the digital, the sonic, and the sculptural.

Atharva’s research draws from media theory, surveillance studies, glitch aesthetics, and urban entropy, with influence from artists like Trimpin, Zimoun, Rafael Lozano-Hemmer, and Ryoji Ikeda. Parallel to their artistic work, they actively share knowledge through workshops, lectures, and their ‘AudioDevout’ platform, focusing on creative coding, TouchDesigner, and sound art methodologies. Their broader interests span critical making, anti-capitalist tech critique, and speculative media futures.

email - atharva152@gmail.com

https://www.instagram.com/asymmetrica_/

https://www.youtube.com/@audiodevout

https://asymmetrica.bandcamp.com/

https://www.linkedin.com/in/atharva--gupta/

I’m building a static portfolio site on GitHub Pages using HTML, CSS, and JavaScript, fully reflecting my style: dark theme (#000 black background, #fff white text) with neon accents in dynamic HSL (around hsl(180,100%,50%)). Typography uses Google Fonts’ Doto for a clean, minimalist Bauhaus-inspired look. The site features glitch effects—flickering neon text, subtle pixel distortions, and digital noise overlays. The cursor is a custom crosshair with a glitchy trailing effect and subtle axis/grid markers around it, reinforcing a cybernetic aesthetic. Neon colors are carefully balanced for strong contrast ensuring the cursor and all text/UI elements remain clearly visible, readable, and accessible in a futuristic style.

All content and metadata—including text blocks, navigation links, image/audio/video paths, and written descriptions—are loaded dynamically from a single centralized file named portfolio_data.js. This file serves as the single source of truth powering galleries, audio players, video embeds, text pages, download lists, and all written content across the site. This makes content management modular, scalable, and easy to update.

All styling is contained exclusively in CSS files, maintaining separation of concerns and ease of customization.

The site’s main page title dynamically switches every few seconds between "Atharva Gupta", "asymmetrica", and "audiodevout", reinforcing brand identity in a subtle but engaging way.

In the background, the site features animated particles drifting and shifting colors in sync with the neon accent palette, adding depth and motion without distracting from content.

Site structure includes:

Home (welcome and nav)

Audio (stream-only neon-glow custom players, no downloads)

Images (gallery thumbnails → detail pages, right-click disabled, no downloads)

Videos (YouTube-style embeds + description pages, no downloads)

Texts (markdown-rendered text pages)

Downloads (list with dedicated pages, no direct media downloads)

About (bio, education, exhibitions, artist statement, projects)

Contact (static Formspree form + obfuscated email)

Thesis (view-only PDF with abstract/context)

Navigation is a fixed, keyboard-accessible navbar with smooth glitch-style page transitions. Accessibility features include alt text, aria-labels, full responsiveness, and mobile-friendly design. Media is protected with right-click disabled and no direct download links, ensuring streaming/view-only.

Content is auto-generated from portfolio_data.js with well-commented code for easy additions. Floating descriptive text drifts slowly with kinetic smoothness, hover states trigger blinking/glowing neon accents, and the audio player glows and flickers to match the site’s vibe. Optional extras include markdown support, lazy loading images, and smooth CSS/JS page transitions.

Contact info and socials (Instagram, YouTube/Vimeo, SoundCloud/Bandcamp, GitHub, LinkedIn, Are.na, etc.) appear clearly with optional downloadable CV or press kit and newsletter signup. The site includes SEO meta tags, favicon, and a small last-updated footer.

Overall, the portfolio feels clean Bauhaus-minimalist fused with glitchy neon cybernetic visuals—striking, professional, immersive, accessible, and perfectly tuned for a futuristic artist identity.



the particles should be floating around not bubbling up
the font should be doto everywhere
the neon should have a glow everywhere
and the text floating in the back should be editable through the single data file that we have in the backend
also, the particles and the floating text should be repelled from the cursor


The website’s aesthetic should immerse visitors in a controlled digital chaos, combining sleek modernism with raw glitch textures. A dark, nearly black background sets the stage for vibrant neon accents—electric cyan, hot pink, and acid green—that flicker and pulse subtly across headers and navigation. The geometric Doto font anchors the design with clean, sharp letterforms, while layered text fragments offset in RGB channels create a living, breathing glitch effect that dances lightly across titles and buttons. Layout embraces asymmetry with overlapping text and images that break the grid just enough to feel intentional, never chaotic. Scanline overlays and animated static grain textures add depth and analog noise, making the site feel like a fractured cyberpunk relic. Interactive elements respond with jittery flickers and pixelated distortions on hover and click, reinforcing the aesthetic without overwhelming usability. Overall, the site balances legibility with disruption, offering visitors a visually striking journey through digital decay that’s both polished and unpredictably alive.
Atharva Gupta is an artist and researcher working at the intersections of sound, movement, technology, and critical media practice. Currently based in Groningen, Netherlands, they are pursuing a Master’s in Media, Art, Design, and Technology (MADtech) at the Frank Mohr Institute, Minerva Art Academy. Their work spans sound installations, kinetic sculptures, generative systems, performance, and experimental interfaces, often engaging with themes of surveillance, systems aesthetics, noise, and the politics of attention.

Their educational background bridges disciplines: an MA in Arts, Cognition, and Criticism from the University of Groningen, and a BA in Psychology, Sociology, and Literature from Christ University, Bangalore. This transdisciplinary foundation informs a practice deeply rooted in both conceptual inquiry and material experimentation. Atharva’s work leverages tools like TouchDesigner, Ableton Live, Arduino, and sensor technologies to create interactive and time-based systems that foreground process, decay, repetition, and failure as aesthetic strategies.

Projects include ‘Rain Reminders’, an ongoing kinetic sound sculpture exploring tinnitus, attention, and meditative distraction through rotating acoustic mechanisms; ‘Symmetrical Fictions’, an audiovisual system using gameplay data and urban simulations to generate speculative sound environments; and various smaller works exploring modular multiplication, visual music, and human-machine feedback loops. Their performances and installations often blend live data, algorithmic processes, and mechanical objects, situating their practice between the digital, the sonic, and the sculptural.

Atharva’s research draws from media theory, surveillance studies, glitch aesthetics, and urban entropy, with influence from artists like Trimpin, Zimoun, Rafael Lozano-Hemmer, and Ryoji Ikeda. Parallel to their artistic work, they actively share knowledge through workshops, lectures, and their ‘AudioDevout’ platform, focusing on creative coding, TouchDesigner, and sound art methodologies. Their broader interests span critical making, anti-capitalist tech critique, and speculative media futures.
CORE STRUCTURE
1. Home / Landing Page
Your name (clear, visible, ideally animated or styled to suit your aesthetic).

Short tagline or sentence that defines your practice. Example:
"Sound installations, kinetic sculptures, and digital systems exploring obsolescence, noise, and control."

Navigation to the rest of the site.

2. About
Short Bio (who you are, what you do, where you're based).

Practice Statement (your thematic focus, mediums, methodology).

Current Status (what you're studying, residencies, affiliations).

Optional Personal Note (tone: direct, human; not overly formal).
Example:

“Currently based in Groningen. Working at the intersection of sound, sculpture, and software. Interested in the tension between control and failure.”

3. Portfolio / Work
Split into clear sections:

Projects: Each with

Title

Year

Medium (Installation / Performance / Software / Workshop / etc.)

Short description (your why and how)

Photos / Video / Audio

Credits / Collaborators if relevant

Performances / Exhibitions / Screenings:

Title, Date, Venue, Location

Workshops / Talks / Teaching (if applicable)

4. Media / Documentation
Good quality photos

Video documentation

Audio recordings (if relevant)

Sketches / behind-the-scenes (optional but can humanize the work)

5. Contact
Email

Social links (IG, YouTube, Vimeo, GitHub, whatever is relevant)

Optional: Newsletter sign-up

6. CV / Press (optional but adds legitimacy)
PDF download of full CV

Press features / reviews

Interviews / podcasts

OPTIONAL ENHANCEMENTS
1. Blog / Writings / Reflections
For process, theory, works-in-progress. Shows depth of thought, good for funding bodies, curators.

2. Experiments / Sketches / Tools
Playground section for small, unfinished things. Useful if you're coding, patching, or building interactive things. Can be linked to GitHub or itch.io.

3. Audio / Music
If you want to split out your sound/music work distinctly from installations. Embed Bandcamp, Soundcloud, or host audio directly.

4. Resources / Teaching Materials
If you want to build an educational side: downloads, templates, code snippets, readings.

5. Shop / Commissions / Support
If you want to monetize (prints, zines, small editions, sound packs, etc.). Could link to Ko-fi, Patreon, etc.

META / TECHNICAL (Invisible but Crucial)
Good SEO (your name, ‘sound installation artist’, ‘kinetic sculpture’, ‘TouchDesigner’, etc.)

Accessible design (alt text, readable contrast, no over-reliance on JS for nav)

Responsive design (works on mobile, tablet, desktop)

Metadata for sharing (OpenGraph for nice Twitter / Facebook / LinkedIn previews)

Analytics (optional but useful to know who's visiting and from where)


1. VISUAL AESTHETICS
Background: Solid black #000000.

Typography: Google Font Doto, used everywhere, all text styles (h1-h6, p, nav). Clean, geometric, Bauhaus-inspired.

Text Color: Pure white #FFFFFF.

Neon Accents: Dynamic HSL-based neon palette—cyan (hsl(180, 100%, 50%)), hot pink, acid green. Used sparingly but consistently on interactive elements: hover, active, highlights, audio players. All neon elements have a soft glow effect (CSS blur and shadow).

Glitch Effects:

Flickering neon text (randomized opacity / filter flickers on hover and idle).

Slight RGB offset/shadow on headings and nav (simulated glitch via layered text).

Hover states include micro pixel shifts and opacity blinks.

Scanline textures and digital noise overlays on backgrounds (subtle, animated via CSS/JS).

2. CURSOR & INTERACTION DESIGN
Cursor:

Very thin, crisp crosshair lines spanning the canvas (horizontal & vertical axes) through cursor position.

Next to cursor, in brackets: live X, Y coordinates displayed as (x, y).

Cursor and axis lines are neon cyan (#00FFFF) with soft glow.

Crosshair and coordinate display update dynamically and smoothly.

Particles:

Animated, floating particles drifting slowly across the background.

Particles shift colors within the neon palette.

Particles repel from the cursor dynamically. Repulsion radius fades smoothly.

Movement is horizontal and free-floating, not bubbling upwards.

Subtle, non-intrusive; opacity less than main content.

Floating Text:

Slow-drifting, kinetic movement across the background, subtle Z-axis depth through parallax.

Text content drawn from portfolio_data.js (editable easily by user).

Each text block softly glows in neon colors.

Floating text is also repelled dynamically by the cursor (same logic as particles).

3. SITE STRUCTURE & FUNCTION
Navigation:

Fixed, accessible, keyboard-navigable navbar.

Smooth glitch-style transitions between pages.

Neon hover glow for active links.

Pages:

Home: Welcome, name/logo cycling between Atharva Gupta / asymmetrica / audiodevout.

Audio: Stream-only. Custom neon-glow players, no downloads.

Images: Gallery grid → detail pages. Right-click disabled.

Videos: Embedded YouTube/Vimeo, description pages.

Texts: Markdown-rendered pages for essays, notes.

Downloads: List pages with descriptions. No direct downloads for media.

About: Biography, education, exhibitions, artist statement, projects.

Contact: Static Formspree form + obfuscated email.

Thesis: View-only PDF, abstract/context visible.

4. DATA MANAGEMENT
All content is stored and loaded from a single centralized JS file portfolio_data.js:

javascript
Copy
Edit
// Example structure
const portfolioData = {
  siteTitle: ["Atharva Gupta", "asymmetrica", "audiodevout"],
  floatingText: ["sound", "movement", "surveillance", ...],
  images: [{ title, path, description }],
  videos: [{ title, embedURL, description }],
  audio: [{ title, streamURL, description }],
  texts: [{ title, markdownPath }],
  downloads: [{ title, filePath, description }],
  bio: "...",
  contactEmail: "atharva152@gmail.com",
  socials: {
    instagram: "...",
    youtube: "...",
    bandcamp: "...",
    linkedin: "..."
  }
};
This file controls all galleries, players, links, floating text, and content.

5. UX / ACCESSIBILITY / FUNCTIONALITY
Fully responsive (desktop, tablet, mobile).

Accessibility: ARIA labels, keyboard-friendly, alt text everywhere.

Right-click disabled on media (images/audio/video).

Smooth CSS/JS transitions.

Lazy loading for images.

SEO meta tags, favicon, OpenGraph for clean social media embeds.

Footer: Last updated date, minimalist.

6. OPTIONAL (IF TIME ALLOWS)
CSS grid breaks / intentional asymmetries in layout (aligned with glitch aesthetic).

Audio player reacts visually (glow flickers in sync with playback).

Option to toggle static noise overlay on/off.

Toggle for scanlines.

7. VIBE / REFERENCE AESTHETIC
Cyberpunk x Bauhaus fusion.

Controlled digital chaos: clear grid with intentional ruptures.

Inspirations: early computer UIs, vector graphics terminals, scanlines, glitch art.

Visual reference: Rafael Rozendaal x Ryoji Ikeda x brutalist code galleries.

If you'd like, I can turn this into a precise Figma wireframe breakdown or give you production-ready CSS / JS boilerplate matching these specs. Just say the word.








You said:
add separately


the particles should have a connection like a shiny diamond when they come close to each other
everything has the same consistent neon light blue cyan colour

all the headings and buttons should be spaced out evenly and the website should be optimised for mobile use aswell



2/2

ChatGPT said:
Got it. Here's your explicitly detailed addition, cleanly appended for clarity. I've written it as clear directives for implementation, easy for AI or developer to follow.

ADDITIONAL SPECIFICATIONS
1. PARTICLE SYSTEM — CONNECTION EFFECT
Particles should have connection lines drawn between them when they come within a certain proximity radius.

These connection lines should resemble shiny, refractive diamond-like threads—thin, bright neon cyan with a subtle glow.

The connections dynamically appear and disappear as particles drift closer or further apart.

Both particles and connection lines share the same neon cyan color for consistency.

Lines may use a slight gradient from solid to transparent for added depth.

Connections repel from the cursor along with the particles themselves.

2. COLOR PALETTE — CONSISTENT NEON CYAN
Everything shares a consistent neon cyan (#00FFFF) for all accents, particles, lines, hover effects, cursor, crosshairs, and floating text.

Avoid any other neon colors (no pink, green).

All neon cyan elements must include a soft glow or bloom effect via CSS (text-shadow, box-shadow, or filter: blur) to simulate light bleed.

3. TYPOGRAPHY & LAYOUT — SPACING & ACCESSIBILITY
Headings (h1–h4) and buttons must have consistent, deliberate spacing.

Vertical rhythm should be balanced: equal margins above and below.

Buttons and headings aligned to a clear, structured baseline grid.

Use generous padding and line-height for readability, especially on smaller screens.

Maintain hierarchy:

h1 > h2 > h3 > h4 with consistent font scaling.

Buttons spaced clearly from surrounding content with adequate touch targets.

4. RESPONSIVE & MOBILE OPTIMIZATION
Fully optimized for mobile and touch devices:

Mobile-first responsive layout.

Cursor replaced by simple centered touch indicator or small crosshair for continuity on touch screens (optional, if not confusing).

Text, buttons, and navigation scaled appropriately for smaller screens with no cramping or overlap.

All hover effects translated into tap-friendly feedback (tap to glow / flicker / activate).

Navigation remains fixed, accessible, and easy to use on mobile.

Particle system performance optimized for lower-end mobile devices—reduce quantity on mobile if necessary without breaking the aesthetic.


1. Social Icons Sidebar
Fixed vertical sidebar on left or right edge with neon cyan glowing social media icons (Instagram, YouTube, Bandcamp, LinkedIn, etc.).

Icons have smooth hover effects: scale, glow intensify, or slight glitch flicker.

Sidebar is always visible but unobtrusive (semi-transparent background or slim icons).

Tap-friendly on mobile (maybe collapsible).

2. Dynamic Neon Color Shifts Based on Cursor Movement
The neon glow, highlights, or accent elements subtly shift hue or saturation as the user moves their mouse across the viewport.

Use smooth transitions for color changes, limited to the neon cyan range to maintain consistency.

Cursor crosshair glow intensity or color could pulse in sync with movement speed.

This adds a tactile, responsive vibe making the site feel alive and reactive.

3. Loading Screen / Splash Screen
A minimal, animated loading screen before the main site loads.

Could be a flickering neon version of your name or logo cycling through aliases (“Atharva Gupta” / “asymmetrica” / “audiodevout”).

Include subtle glitch effects or noise animation to keep on-brand.

Loading bar or spinner could use neon cyan glowing lines or dots.

Should disappear smoothly once all assets and scripts are ready.

4. Scroll-Based Parallax and Animation
Floating text or background layers gently shift with scroll for depth.

Sections can fade or glitch in/out as user scrolls.

Smooth easing, subtle enough to not distract but add dimension.

5. Dark Mode Toggle (Optional)
Even though your base is dark, a subtle “low power mode” or “reduce motion” toggle could appeal to accessibility and user preference.

Reduce noise, flicker, or particle count on demand.

6. Keyboard Shortcuts & Accessibility Improvements
Enable keyboard shortcuts to navigate sections or toggle sound.

Focus outlines for links and buttons.

ARIA live regions for dynamic content updates.

7. Audio Visualizer for Music Playback
When audio plays, an on-screen reactive neon waveform or abstract geometry pulses in real-time, synced with sound amplitude.

Subtle, integrated within the audio player UI or as a background effect.

8. SEO & Performance Optimization
Lazy load images and videos.

Compress all assets for fast load times.

Proper meta tags for social sharing (OpenGraph, Twitter Cards).

Sitemap.xml and robots.txt configured for search engines.

9. Analytics & Feedback
Integrate privacy-conscious analytics (e.g. Plausible, Fathom) to track visitors.

Optional feedback form or rating system.

10. Offline Fallback / PWA Features (Advanced)
Service worker for caching assets so the site partially works offline.

Add to homescreen prompt on mobile devices.

11. Content Update Notifications
Small footer or toast alert showing last updated date or new content alerts.

12. Downloadable Press Kit or CV
Provide a downloadable PDF with your CV, bio, images for press use.


Detailed Backend Usage & Deployment Prompt for GitHub Pages
Project Structure & Content Management
Single Source of Truth:
All text content, media references (image, audio, video URLs), navigation links, floating background text, and metadata must be stored in a single JavaScript file named portfolio_data.js. This file lives in the project’s root or a designated /data/ folder.

Data File Format:
Use a structured JSON-like JavaScript object exported or globally declared, for example:

js
Copy
Edit
const portfolioData = {
  siteTitleAliases: ["Atharva Gupta", "asymmetrica", "audiodevout"],
  navigation: [
    { id: "home", label: "Home", url: "#home" },
    { id: "audio", label: "Audio", url: "#audio" },
    // add other nav items here
  ],
  bio: "...",
  floatingText: ["sound", "movement", "glitch", "technology", "noise"],
  socials: {
    instagram: "https://instagram.com/asymmetrica_",
    youtube: "https://youtube.com/@audiodevout",
    bandcamp: "https://asymmetrica.bandcamp.com",
    linkedin: "https://linkedin.com/in/atharva--gupta"
  },
  projects: [
    {
      title: "Rain Reminders",
      year: 2024,
      medium: "Kinetic Sound Sculpture",
      description: "Exploring tinnitus and meditative distraction through rotating acoustic objects.",
      images: ["images/rain_reminders_1.jpg", "images/rain_reminders_2.jpg"],
      videos: [],
      audio: []
    },
    // more projects
  ],
  audioTracks: [
    { title: "Track 1", streamURL: "audio/track1.mp3", description: "..." },
    // more tracks
  ],
  videos: [
    { title: "Installation Video", embedURL: "https://youtube.com/embed/xyz", description: "..." },
    // more videos
  ],
  texts: [
    { title: "Artist Statement", markdownPath: "texts/artist_statement.md" },
    // more text documents
  ],
  downloads: [
    { title: "CV 2025", filePath: "downloads/AtharvaGuptaCV2025.pdf", description: "Download my latest CV." }
    // more downloads
  ],
  contactEmail: "atharva152@gmail.com",
  lastUpdated: "2025-07-22"
};
Editable Content:

All site textual content, including floating background text, nav labels, project descriptions, and contact info, can be updated solely by editing this one file.

Media files are referenced by relative URLs stored here, which map to folders inside the repo (/images/, /audio/, /videos/, /texts/, /downloads/).

Markdown Support for Text Pages:

Use client-side Markdown rendering for long text pages (artist statements, essays). Markdown files stored in /texts/ referenced in portfolio_data.js.

On page load, fetch and parse markdown asynchronously.

Frontend Content Rendering
Dynamic Loading:

Use JavaScript to dynamically render all page content from portfolioData.

Navigation menu, galleries, audio players, video embeds, floating text, and descriptions should be built at runtime from this file.

Floating text content for background animation should pull from portfolioData.floatingText.

Site title in <title> tag cycles through portfolioData.siteTitleAliases every few seconds.

Media Controls:

Audio players are stream-only, with no download option.

Video sections embed YouTube or Vimeo using URLs from the data file.

Images display in gallery grid with right-click disabled.

GitHub Pages Deployment Best Practices
Static Hosting Compatibility:

No server-side code; all content served as static files.

Relative URLs and file structures must work correctly on GitHub Pages (usually at username.github.io/repo-name/).

Use relative links (./images/pic.jpg) instead of absolute unless you configure a custom domain.

Asset Organization:

Store all images, audio, video, markdown, and downloadable PDFs inside dedicated folders (/images/, /audio/, /videos/, /texts/, /downloads/) in the repo root or /assets/.

This keeps repo clean and easy to maintain.

Cache Busting:

When updating assets, rename files or append query strings to avoid browser caching issues (e.g., track1.mp3?v=2).

Performance:

Compress images and audio to reduce load times.

Use lazy loading for images and defer offscreen media loading with IntersectionObserver.

SEO & Accessibility:

Populate HTML <head> with meta tags from portfolioData.

Use semantic HTML and ARIA roles/labels generated dynamically for accessibility.

Version Control:

Commit changes to portfolio_data.js and media files with clear messages.

Preview locally using VSCode Live Server or similar before pushing to GitHub.

Updating & Maintenance Workflow
Edit portfolio_data.js: Add/edit text, media references, and structure.

Add/replace media files in respective folders (images/, audio/, etc.).

Commit and push to your GitHub repo.

GitHub Pages automatically builds and deploys the updated site.

Check live site and debug if necessary.

Visual & UI Enhancement Prompt for Particles, Bloom, and Nav
Particles:

Render particles with soft circular gradients fading outwards, giving a glowing orb effect.

Add a subtle bloom (light bleed) effect around each particle, intensifying the neon cyan glow. Use CSS filters or WebGL shaders if possible for smooth bloom.

Particle connections (lines) should also glow with the same bloom effect, with a slight blur and opacity gradient to simulate light refraction.

Particle movement should be smooth, organic, with easing to avoid jitter.

Consider layering multiple particle sizes and opacities to create depth and richness.

Optionally add a slow, gentle pulsation in particle size or brightness to simulate breathing light.

Bloom / Neon Glow on All Neon Objects:

Apply a consistent bloom/glow effect on all neon-colored elements: headings, buttons, nav items, floating text, cursor crosshairs, and particles.

Use CSS filter: drop-shadow() combined with text-shadow or box-shadow to produce layered glows.

Glow color strictly neon cyan (#00FFFF) with variations in opacity and spread for dimension.

Glow intensifies on hover or focus states, producing a pulsating effect.

Avoid overwhelming the user: keep glow subtle but visible, maintaining crisp edges and readability.

Right-Side Vertical Navigation Bar:

Implement a fixed vertical navigation bar aligned to the right edge of the viewport.

Nav items stacked vertically, spaced evenly with generous padding and consistent neon cyan coloring and glow.

Nav bar has a slim toggle button (hamburger or arrow icon) that hides/shows the nav smoothly via CSS transitions or JS animations.

When hidden, the nav bar collapses into a small vertical tab or icon on the right edge, still clickable to expand.

Nav bar and toggle button share the neon cyan glow aesthetic and subtle glitch flicker on hover.

Nav is fully keyboard accessible and responds to focus with visible glow outlines.


1. Folder Structure
Organize the project as follows:

bash
Copy
Edit
/ (root)
├── index.html
├── portfolio_data.js            # Single centralized file with all site content, media URLs, floating text, metadata
├── favicon.ico
├── README.md

├── /css/
│    ├── main.css               # Core styles: dark theme, Doto typography, glitch and neon bloom effects
│    ├── particles.css          # Particle system styles: neon cyan glow and bloom
│    └── nav.css                # Navbar styles for vertical left-side menu and translucent right-side social links

├── /js/
│    ├── main.js                # Initialization, dynamic rendering, glitch animations
│    ├── particles.js           # Particle system with floating, repulsion, and dynamic connection lines
│    ├── floatingText.js        # Floating text animations and cursor repulsion logic
│    ├── nav.js                 # Navbar toggle and interaction handlers
│    ├── markdownRenderer.js    # Markdown fetching and rendering for text pages
│    └── loadingScreen.js       # Loading screen animations and controls

├── /images/
│    ├── projects/              # Project images
│    └── ui/                   # UI assets and neon cyan social icons for right side (translucent)

├── /audio/                    # Audio files for streaming players
├── /videos/                   # Local video files or embedded URLs
├── /texts/                    # Markdown documents for long-form text content
├── /downloads/                # Downloadable assets such as CVs and press kits

└── /assets/                   # Optional: fonts or miscellaneous static files
2. Particles and Floating Text
Implement at least 500 neon cyan glowing particles drifting smoothly across the background.

Particles dynamically connect with thin neon cyan diamond-shaped lines when close.

Implement 40 instances of neon cyan glowing floating text drifting slowly in the background.

Both particles and floating text must repel smoothly away from the cursor position.

3. Navigation and Social Links
Vertical navbar fixed on the left side with neon cyan accents and glow effects.

Navbar includes a toggle button to hide/show the menu.

On the right side, display social media link icons (Instagram, YouTube, Bandcamp, LinkedIn, etc.) in a translucent vertical sidebar.

Social icons have a subtle, constant neon cyan glow, which intensifies (brighter glow) on hover.

4. Cursor and Interaction Effects
A very thin neon cyan crosshair grid lines covering the entire viewport, vertical and horizontal lines intersecting at the cursor.

Display real-time (x, y) coordinates next to the cursor in brackets, styled with neon cyan glow.

Add a glitchy trailing cursor effect that follows the mouse pointer smoothly with fading neon glow.

All neon elements (particles, text, nav, icons, cursor) should have a base subtle glow at all times, with a brighter glow on hover or active state.

5. Overall Visual Style
Background: solid black (#000000).

Neon cyan (#00FFFF) used consistently for all accent glows, text highlights, UI elements, and interactive states.

Typography: Google Fonts Doto for all text elements, headings, and UI.

Glitch effects: flickering neon text, subtle RGB channel offsets on headings, buttons, and interactive elements.