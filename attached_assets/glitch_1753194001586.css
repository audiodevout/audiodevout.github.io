/* ===================================================================
   GLITCH EFFECTS & TRANSITIONS
   Cyberpunk Aesthetic with Animated Text Effects
   =================================================================== */

/* ===================================================================
   GLITCH TEXT EFFECT
   =================================================================== */
.glitch-text {
    position: relative;
    color: var(--color-white);
    font-weight: var(--font-weight-bold);
    text-transform: uppercase;
    letter-spacing: 2px;
    display: inline-block;
}

.glitch-text::before,
.glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.glitch-text::before {
    animation: glitch-1 0.5s infinite;
    color: var(--color-neon);
    z-index: -1;
}

.glitch-text::after {
    animation: glitch-2 0.5s infinite;
    color: #ff00ff;
    z-index: -2;
}

.glitch-text:hover::before,
.glitch-text:hover::after {
    animation-duration: 0.1s;
}

/* Glitch animation keyframes */
@keyframes glitch-1 {
    0% {
        transform: translate(0);
        opacity: 1;
    }
    20% {
        transform: translate(-2px, 2px);
        opacity: 1;
    }
    40% {
        transform: translate(-2px, -2px);
        opacity: 1;
    }
    60% {
        transform: translate(2px, 2px);
        opacity: 1;
    }
    80% {
        transform: translate(2px, -2px);
        opacity: 1;
    }
    100% {
        transform: translate(0);
        opacity: 1;
    }
}

@keyframes glitch-2 {
    0% {
        transform: translate(0);
        opacity: 0.8;
    }
    20% {
        transform: translate(2px, 2px);
        opacity: 0.8;
    }
    40% {
        transform: translate(2px, -2px);
        opacity: 0.8;
    }
    60% {
        transform: translate(-2px, 2px);
        opacity: 0.8;
    }
    80% {
        transform: translate(-2px, -2px);
        opacity: 0.8;
    }
    100% {
        transform: translate(0);
        opacity: 0.8;
    }
}

/* ===================================================================
   NEON GLOW EFFECTS
   =================================================================== */
.neon-glow {
    color: var(--color-neon);
    text-shadow: var(--text-shadow-neon);
    animation: neon-flicker 2s infinite alternate;
}

@keyframes neon-flicker {
    0%, 100% {
        text-shadow: 
            0 0 5px var(--color-neon),
            0 0 10px var(--color-neon),
            0 0 15px var(--color-neon),
            0 0 20px var(--color-neon);
    }
    50% {
        text-shadow: 
            0 0 2px var(--color-neon),
            0 0 5px var(--color-neon),
            0 0 8px var(--color-neon),
            0 0 12px var(--color-neon);
    }
}

/* Hover state for neon elements */
.neon-hover:hover {
    color: var(--color-neon);
    text-shadow: var(--text-shadow-neon);
    transition: all var(--transition-normal);
}

/* ===================================================================
   GLITCH TRANSITION OVERLAY
   =================================================================== */
.glitch-transition {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: var(--color-black);
    z-index: var(--z-modal);
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: opacity 0.2s ease, visibility 0.2s ease;
}

.glitch-transition.active {
    opacity: 1;
    visibility: visible;
    pointer-events: all;
}

.glitch-transition::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        90deg,
        transparent,
        transparent 2px,
        var(--color-neon) 2px,
        var(--color-neon) 4px
    );
    opacity: 0.1;
    animation: scan-lines 0.1s linear infinite;
}

@keyframes scan-lines {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(4px);
    }
}

.glitch-transition-text {
    font-size: 2rem;
    font-weight: var(--font-weight-bold);
    color: var(--color-neon);
    text-transform: uppercase;
    letter-spacing: 3px;
    animation: glitch-intense 0.2s infinite;
}

@keyframes glitch-intense {
    0% {
        transform: translate(0);
        filter: hue-rotate(0deg);
    }
    20% {
        transform: translate(-5px, 5px);
        filter: hue-rotate(90deg);
    }
    40% {
        transform: translate(-5px, -5px);
        filter: hue-rotate(180deg);
    }
    60% {
        transform: translate(5px, 5px);
        filter: hue-rotate(270deg);
    }
    80% {
        transform: translate(5px, -5px);
        filter: hue-rotate(360deg);
    }
    100% {
        transform: translate(0);
        filter: hue-rotate(0deg);
    }
}

/* ===================================================================
   BLINKING CURSOR EFFECT
   =================================================================== */
.typing-cursor::after {
    content: '_';
    color: var(--color-neon);
    animation: blink 1s infinite;
}

@keyframes blink {
    0%, 50% {
        opacity: 1;
    }
    51%, 100% {
        opacity: 0;
    }
}

/* ===================================================================
   DATA CORRUPTION EFFECT
   =================================================================== */
.corrupt-text {
    position: relative;
    display: inline-block;
}

.corrupt-text::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-black);
    color: var(--color-neon);
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    animation: corrupt-1 2s infinite linear alternate-reverse;
}

.corrupt-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-black);
    color: #ff00ff;
    clip-path: polygon(0 60%, 100% 60%, 100% 100%, 0 100%);
    animation: corrupt-2 2s infinite linear alternate-reverse;
}

@keyframes corrupt-1 {
    0% {
        clip-path: polygon(0 0, 100% 0, 100% 5%, 0 5%);
    }
    5% {
        clip-path: polygon(0 0, 100% 0, 100% 10%, 0 10%);
    }
    10% {
        clip-path: polygon(0 0, 100% 0, 100% 15%, 0 15%);
    }
    15% {
        clip-path: polygon(0 0, 100% 0, 100% 20%, 0 20%);
    }
    20% {
        clip-path: polygon(0 0, 100% 0, 100% 25%, 0 25%);
    }
    25% {
        clip-path: polygon(0 0, 100% 0, 100% 30%, 0 30%);
    }
    30% {
        clip-path: polygon(0 0, 100% 0, 100% 35%, 0 35%);
    }
    35% {
        clip-path: polygon(0 0, 100% 0, 100% 40%, 0 40%);
    }
    40% {
        clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    }
    45% {
        clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
    }
    50% {
        clip-path: polygon(0 0, 100% 0, 100% 55%, 0 55%);
    }
    55% {
        clip-path: polygon(0 0, 100% 0, 100% 60%, 0 60%);
    }
    60% {
        clip-path: polygon(0 0, 100% 0, 100% 65%, 0 65%);
    }
    65% {
        clip-path: polygon(0 0, 100% 0, 100% 70%, 0 70%);
    }
    70% {
        clip-path: polygon(0 0, 100% 0, 100% 75%, 0 75%);
    }
    75% {
        clip-path: polygon(0 0, 100% 0, 100% 80%, 0 80%);
    }
    80% {
        clip-path: polygon(0 0, 100% 0, 100% 85%, 0 85%);
    }
    85% {
        clip-path: polygon(0 0, 100% 0, 100% 90%, 0 90%);
    }
    90% {
        clip-path: polygon(0 0, 100% 0, 100% 95%, 0 95%);
    }
    95% {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
    100% {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
}

@keyframes corrupt-2 {
    0% {
        clip-path: polygon(0 95%, 100% 95%, 100% 100%, 0 100%);
    }
    5% {
        clip-path: polygon(0 90%, 100% 90%, 100% 100%, 0 100%);
    }
    10% {
        clip-path: polygon(0 85%, 100% 85%, 100% 100%, 0 100%);
    }
    15% {
        clip-path: polygon(0 80%, 100% 80%, 100% 100%, 0 100%);
    }
    20% {
        clip-path: polygon(0 75%, 100% 75%, 100% 100%, 0 100%);
    }
    25% {
        clip-path: polygon(0 70%, 100% 70%, 100% 100%, 0 100%);
    }
    30% {
        clip-path: polygon(0 65%, 100% 65%, 100% 100%, 0 100%);
    }
    35% {
        clip-path: polygon(0 60%, 100% 60%, 100% 100%, 0 100%);
    }
    40% {
        clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
    }
    45% {
        clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0 100%);
    }
    50% {
        clip-path: polygon(0 45%, 100% 45%, 100% 100%, 0 100%);
    }
    55% {
        clip-path: polygon(0 40%, 100% 40%, 100% 100%, 0 100%);
    }
    60% {
        clip-path: polygon(0 35%, 100% 35%, 100% 100%, 0 100%);
    }
    65% {
        clip-path: polygon(0 30%, 100% 30%, 100% 100%, 0 100%);
    }
    70% {
        clip-path: polygon(0 25%, 100% 25%, 100% 100%, 0 100%);
    }
    75% {
        clip-path: polygon(0 20%, 100% 20%, 100% 100%, 0 100%);
    }
    80% {
        clip-path: polygon(0 15%, 100% 15%, 100% 100%, 0 100%);
    }
    85% {
        clip-path: polygon(0 10%, 100% 10%, 100% 100%, 0 100%);
    }
    90% {
        clip-path: polygon(0 5%, 100% 5%, 100% 100%, 0 100%);
    }
    95% {
        clip-path: polygon(0 0%, 100% 0%, 100% 100%, 0 100%);
    }
    100% {
        clip-path: polygon(0 0%, 100% 0%, 100% 100%, 0 100%);
    }
}

/* ===================================================================
   SCREEN TEAR EFFECT
   =================================================================== */
.screen-tear {
    position: relative;
    overflow: hidden;
}

.screen-tear::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--color-neon);
    animation: tear 3s infinite;
}

@keyframes tear {
    0%, 90% {
        transform: translateY(0);
        opacity: 0;
    }
    91% {
        transform: translateY(0);
        opacity: 1;
    }
    92% {
        transform: translateY(20px);
        opacity: 1;
    }
    93% {
        transform: translateY(40px);
        opacity: 1;
    }
    94% {
        transform: translateY(60px);
        opacity: 1;
    }
    95% {
        transform: translateY(80px);
        opacity: 1;
    }
    96% {
        transform: translateY(100px);
        opacity: 1;
    }
    97% {
        transform: translateY(120px);
        opacity: 1;
    }
    98% {
        transform: translateY(140px);
        opacity: 1;
    }
    99% {
        transform: translateY(160px);
        opacity: 1;
    }
    100% {
        transform: translateY(180px);
        opacity: 0;
    }
}

/* ===================================================================
   RGB SPLIT EFFECT
   =================================================================== */
.rgb-split {
    position: relative;
    display: inline-block;
}

.rgb-split::before,
.rgb-split::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.rgb-split::before {
    color: #ff0000;
    animation: rgb-split-red 2s infinite;
    mix-blend-mode: screen;
}

.rgb-split::after {
    color: #0000ff;
    animation: rgb-split-blue 2s infinite;
    mix-blend-mode: screen;
}

@keyframes rgb-split-red {
    0%, 100% {
        transform: translate(0);
    }
    25% {
        transform: translate(-2px, 0);
    }
    50% {
        transform: translate(2px, 0);
    }
    75% {
        transform: translate(-1px, 0);
    }
}

@keyframes rgb-split-blue {
    0%, 100% {
        transform: translate(0);
    }
    25% {
        transform: translate(2px, 0);
    }
    50% {
        transform: translate(-2px, 0);
    }
    75% {
        transform: translate(1px, 0);
    }
}

/* ===================================================================
   MATRIX RAIN EFFECT (for backgrounds)
   =================================================================== */
.matrix-rain {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: var(--z-background);
    overflow: hidden;
}

.matrix-column {
    position: absolute;
    top: -100px;
    color: var(--color-neon);
    font-family: var(--font-primary);
    font-size: 14px;
    line-height: 14px;
    opacity: 0.8;
    animation: matrix-fall linear infinite;
}

@keyframes matrix-fall {
    from {
        transform: translateY(-100vh);
    }
    to {
        transform: translateY(100vh);
    }
}

/* ===================================================================
   UTILITY CLASSES
   =================================================================== */
.glitch-hover:hover {
    animation: glitch-1 0.3s infinite;
}

.neon-border {
    border: 1px solid var(--color-neon);
    box-shadow: 0 0 10px var(--color-neon-glow);
}

.neon-border-hover:hover {
    border-color: var(--color-neon);
    box-shadow: var(--neon-shadow);
}

.flicker {
    animation: flicker 1.5s infinite alternate;
}

@keyframes flicker {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.8;
    }
}

.pulse-neon {
    animation: pulse-neon 2s infinite;
}

@keyframes pulse-neon {
    0% {
        box-shadow: 0 0 5px var(--color-neon);
    }
    50% {
        box-shadow: var(--neon-shadow);
    }
    100% {
        box-shadow: 0 0 5px var(--color-neon);
    }
}